#!/usr/bin/env sh

# Description: Toggle mount status of a device using pmount
#              If the device is not mounted, it will be mounted.
#              If the device is mounted, it will be unmounted and powered down.
#
# Dependencies: lsblk, pmount (optional), udisks2
#
# Usage: Runs `lsblk` on 'l', exits on 'Return`.
#
# Notes:
#   - The script uses Linux-specific lsblk to list block devices. Alternatives:
#       macOS: "diskutil list"
#       BSD: "geom disk list"
#   - The script uses udisksctl (from udisks2) to power down devices. This is also Linux-specific.
#     Users on non-Linux platforms can comment it and use an alternative to power-down disks.
#
# Shell: POSIX compliant
# Author: Arun Prakash Jana

# Function to check if a command exists
command_exists() {
    command -v "$1" >/dev/null 2>&1
}

# Function to mount a device
mount_device() {
    local dev="$1"
    local fs_type="$(lsblk -n "/dev/$dev" -o FSTYPE)"
    if command_exists pmount; then
        pmount "/dev/$dev"
        exit_code="$?"
    else
        if [[ "$fs_type" == "crypto_LUKS" ]]; then
            dev_map="$(udisksctl unlock -b "/dev/$dev" --no-user-interaction | grep -o "dm-[\[:digit:\]]*")"
            udisksctl mount -b "/dev/$dev_map" --no-user-interaction >/dev/null
            exit_code="$?"
        else
            udisksctl mount -b "/dev/$dev" --no-user-interaction >/dev/null
            exit_code="$?"
        fi
    fi
    if [[ $exit_code -eq 0 ]]; then
        sleep 1
        printf "\n\033[1;92m/dev/%s mounted to %s.\033[0m\n" "$dev" "$(lsblk -n "/dev/$dev" -o MOUNTPOINT | sed "/^$/d")"
        echo " "
    fi
}

# Function to unmount a device
unmount_device() {
    local dev="$1"
    local fs_type="$(lsblk -n "/dev/$dev" -o FSTYPE)"
    sync "$(lsblk -n "/dev/$dev" -o MOUNTPOINT | sed "/^$/d")"
    if command_exists pumount; then
        pumount "/dev/$dev"
        exit_code="$?"
    else
        if [[ "$fs_type" == "crypto_LUKS" ]]; then
            dev_map="$(udisksctl info -b "/dev/$dev" | grep "CleartextDevice" | grep -o "dm-[\[:digit:\]]*")"
            udisksctl unmount -b "/dev/$dev_map" --no-user-interaction >/dev/null
            exit_code="$?"
            udisksctl lock -b "/dev/$dev" --no-user-interaction >/dev/null
        else
            udisksctl unmount -b "/dev/$dev" --no-user-interaction >/dev/null
            exit_code="$?"
        fi
    fi
    if [[ $exit_code -eq 0 ]]; then
        printf "\033[1;93m\n/dev/%s unmounted.\033[0m\n" "$dev"
        echo " "
    fi
}

prompt="device name [e.g. sdXn] ('l'ist, 'q'uit): "
while true; do
    lsblk
    printf "\nEnsure you aren't still in the mounted device.\n"
    printf "%s" "$prompt"
    read -r dev
    case "$dev" in
    l) continue ;;
    q) exit ;;
    *)
        if grep -qs "$dev " /proc/mounts || [[ -n "$(lsblk -n "/dev/$dev" -o MOUNTPOINT)" ]]; then
            unmount_device "$dev"
        elif [[ -b "/dev/$dev" ]]; then
            mount_device "$dev"
        else
            printf "\033[1;31m\n/dev/%s does not exist or is not a block device.\033[0m\n" "$dev"
            echo " "
        fi
        ;;
    esac
done
